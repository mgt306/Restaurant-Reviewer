[{"C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\index.js":"1","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\reportWebVitals.js":"2","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\App.js":"3","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\components\\Navbar.js":"4","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\Login and Register\\Login.js":"5","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\Home\\Home.js":"6","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\Explore\\Explore.js":"7","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\About\\AboutUs.js":"8","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\Register\\GenericReview.js":"9","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\Profile\\Profile.js":"10","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\Login and Register\\Register.js":"11","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\components\\NewMap.js":"12","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\components\\Map.js":"13","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\components\\SearchResults.js":"14","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\components\\Search.js":"15"},{"size":692,"mtime":1667270375326,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1667270375326,"results":"18","hashOfConfig":"17"},{"size":1336,"mtime":1670207655391,"results":"19","hashOfConfig":"17"},{"size":4774,"mtime":1668979828361,"results":"20","hashOfConfig":"17"},{"size":3653,"mtime":1668981289332,"results":"21","hashOfConfig":"17"},{"size":162,"mtime":1667270375324,"results":"22","hashOfConfig":"17"},{"size":219,"mtime":1667696129548,"results":"23","hashOfConfig":"17"},{"size":1776,"mtime":1668979828359,"results":"24","hashOfConfig":"17"},{"size":8364,"mtime":1668980660593,"results":"25","hashOfConfig":"17"},{"size":157,"mtime":1667270375324,"results":"26","hashOfConfig":"17"},{"size":2557,"mtime":1668979828359,"results":"27","hashOfConfig":"17"},{"size":2393,"mtime":1668982035960,"results":"28","hashOfConfig":"17"},{"size":1726,"mtime":1668979828361,"results":"29","hashOfConfig":"17"},{"size":1320,"mtime":1670205740913,"results":"30","hashOfConfig":"17"},{"size":940,"mtime":1670207670110,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"19c4rrd",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},"C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\index.js",[],["70","71"],"C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\reportWebVitals.js",[],"C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\App.js",[],"C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\components\\Navbar.js",[],"C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\Login and Register\\Login.js",["72","73"],"import React, { useState , useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../Styles/Login.css\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n\r\nexport default function Login() {\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n    }\r\n    const [user, setUser] = useState({});\r\n\r\n    function handleCallbackResponse(response) {\r\n      console.log(\"Encoded JWT ID Token: \" + response.credential);\r\n      var userObject = jwt_decode(response.credential);\r\n      console.log(userObject)\r\n      setUser(userObject);\r\n      document.getElementById(\"signInDiv\").hidden = true;\r\n    }\r\n    \r\n    function handleSignOut(event) {\r\n      setUser({});\r\n      document.getElementById(\"signInDiv\").hidden = false;\r\n    }\r\n  \r\n    //testing user authentication\r\n    useEffect(() => {\r\n      /* global google */\r\n      google.accounts.id.initialize({\r\n        client_id: \"186661128169-rtbrhibr9p5ne088h88sssvl4sei2nto.apps.googleusercontent.com\",\r\n        callback: handleCallbackResponse\r\n      });\r\n  \r\n      google.accounts.id.renderButton(\r\n        document.getElementById(\"signInDiv\"),\r\n        { theme: \"outline\", sign: \"large\"}\r\n      );\r\n  \r\n      google.accounts.id.prompt();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                <div className=\"card\">\r\n                <div className=\"card-header\">Login</div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        //value of email, addOnChange\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        //value of password, add onChange\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        disabled={loading}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        Login\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                <div>\r\n                    <Link to=\"/register\">Don't have an account? Register</Link>\r\n                </div>\r\n                </div>\r\n                <div>\r\n                <div id=\"signInDiv\"></div>\r\n        \r\n        { user && <div id=\"afterSignIn\"> \r\n            <img id=\"userpic\" src={user.picture}></img>\r\n            <p id=\"username\">{user.name}</p>\r\n            {  Object.keys(user).length != 0 &&\r\n              <button id=\"signOut\" onClick={ (e) => handleSignOut(e)}>Sign Out</button>\r\n            }\r\n        </div>\r\n        }\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\Home\\Home.js",[],"C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\Explore\\Explore.js",["74"],"import React from 'react';\r\nimport NewMap from '../../components/NewMap';\r\nimport Navbar from '../../components/Navbar'\r\n\r\nconst Explore = () => {\r\n    return (  \r\n       <NewMap />\r\n    );\r\n}\r\n\r\nexport default Explore;","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\About\\AboutUs.js",["75","76","77","78","79","80"],"import React from 'react';\r\n\r\nimport '../../Styles/AboutUs.css';\r\nimport Ahn from \"../../Images/Ahn.PNG\"\r\nimport Derek from \"../../Images/Derek.PNG\"\r\nimport Michael from \"../../Images/Michael.jpg\"\r\n\r\nconst AboutUs=()=>{\r\n    return(\r\n        <>\r\n        <wrapper className=\"wrapper\">\r\n        <about>\r\n        <h1 className='h1-about'>About Us</h1>\r\n        <gall className='gallery-about'>\r\n          <a><img src={Ahn} />\r\n            <p></p>\r\n            <artists>Anh Tran</artists>\r\n            <desc>Hello! I'm currently a 4th year CS Student @ NYU. I use he/him/his pronouns. I love photography and boxing!</desc>\r\n          </a>\r\n          <a><img src={Derek} />\r\n            <p></p>\r\n            <artists>Derek Han</artists>\r\n            <desc>Hi all! I'm currently a 4th year CS Student @ NYU. I use he/him/his pronouns. I am avid about motorcycles, mechanical keyboards, and music.</desc>\r\n          </a>\r\n          <a><img src={Michael} />\r\n            <p></p>\r\n            <artists>Michael Thuo</artists>\r\n            <desc>Hey! I'm currently a 4th year CS Student @ NYU. I use he/him/his pronouns. I enjoy cooking and taking long walks around the city.</desc>\r\n          </a>\r\n        </gall>\r\n      </about>\r\n      <div className = \"aboutProj\">\r\n          <h2 className='h2-about'>About the Project</h2>\r\n          <p className='p2-about'>\r\n            This project was created for the final project of the CS Level Elective course \"Remote Development\" at NYU's College of Arts and Sciences. \r\n             The project was created by a team of 3 students: Anh Tran, Derek Han, and Michael Thuo. The project was created using React, Express, Node.js, and MongoDB.\r\n          </p>\r\n      </div>\r\n      </wrapper>\r\n      </>\r\n    )\r\n};\r\n\r\nexport default AboutUs;\r\n\r\n","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\Register\\GenericReview.js",["81","82","83","84","85"],"import { Link } from \"react-router-dom\";\r\nimport \"./GenericReview.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { React } from \"react\";\r\nimport { axios } from \"axios\";\r\n\r\nconst GenericReview = props => {\r\n    const [review, setReview] = useState({\r\n        id: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        ambianceRating: \"\",\r\n        foodRating: \"\",\r\n        serviceRating: \"\",\r\n        priceRating: \"\",\r\n        overallRating: \"\",\r\n        date: \"\",\r\n        userId: \"\",\r\n        restaurantId: \"\"\r\n    });\r\n    \r\n    const [user, setUser] = useState({\r\n        id: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h3>Review</h3>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"title\">Title</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"title\"\r\n                                        placeholder=\"Enter title\"\r\n                                        value={review.title}\r\n                                        onChange={e => setReview({ ...review, title: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description\">Description</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"description\"\r\n                                        placeholder=\"Enter description\"\r\n                                        value={review.description}\r\n                                        onChange={e => setReview({ ...review, description: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"ambianceRating\">Ambiance Rating</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"ambianceRating\"\r\n                                        placeholder=\"Enter ambiance rating\"\r\n                                        value={review.ambianceRating}\r\n                                        onChange={e => setReview({ ...review, ambianceRating: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"foodRating\">Food Rating</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"foodRating\"\r\n                                        placeholder=\"Enter food rating\"\r\n                                        value={review.foodRating}\r\n                                        onChange={e => setReview({ ...review, foodRating: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"serviceRating\">Service Rating</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"serviceRating\"\r\n                                        placeholder=\"Enter service rating\"\r\n                                        value={review.serviceRating}\r\n                                        onChange={e => setReview({ ...review, serviceRating: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"priceRating\">Price Rating</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"priceRating\"\r\n                                        placeholder=\"Enter price rating\"\r\n                                        value={review.priceRating}\r\n                                        onChange={e => setReview({ ...review, priceRating: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"overallRating\">Overall Rating</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"overallRating\"\r\n                                        placeholder=\"Enter overall rating\"\r\n                                        value={review.overallRating}\r\n                                        onChange={e => setReview({ ...review, overallRating: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"date\">Date</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"date\"\r\n                                        placeholder=\"Enter date\"\r\n                                        value={review.date}\r\n                                        onChange={e => setReview({ ...review, date: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"userId\">User Id</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"userId\"\r\n                                        placeholder=\"Enter user id\"\r\n                                        value={review.userId}\r\n                                        onChange={e => setReview({ ...review, userId: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"restaurantId\">Restaurant Id</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"restaurantId\"\r\n                                        placeholder=\"Enter restaurant id\"\r\n                                        value={review.restaurantId}\r\n                                        onChange={e => setReview({ ...review, restaurantId: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenericReview;\r\n","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\Profile\\Profile.js",[],"C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\Pages\\Login and Register\\Register.js",[],"C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\components\\NewMap.js",["86"],"import mapboxgl from \"mapbox-gl\";\r\nimport { useEffect, useRef} from 'react';\r\nimport markerJson from \"./restaurants.json\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport \"./NewMap.css\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoiYW5odHJyIiwiYSI6ImNsOW9kbGtwazBnbTAzd281YXJ3ejhjcmsifQ.Et0LpdRG7mN6MB58p_52qQ\";\r\n\r\nconst NewMap = () =>{\r\n    const mapContainerRef = useRef(null);\r\n    useEffect(() => {\r\n        const map = new mapboxgl.Map({\r\n            container: mapContainerRef.current,\r\n            style: \"mapbox://styles/anhtrr/cl9odtk6b001v15s1cq54igry\",\r\n            center: [-73.998017,40.731925],\r\n            zoom: 15,\r\n            pitch:45,\r\n          });\r\n        \r\n        markerJson.results.data.map((feature) =>{ \r\n            const center1 = [feature.longitude.replace(/['\"]+/g, ''), feature.latitude.replace(/['\"]+/g, '')];\r\n            console.log(center1);\r\n            new mapboxgl.Marker()\r\n                .setLngLat(center1)\r\n                .setPopup(\r\n                    new mapboxgl.Popup({ offset: 25 })\r\n                    .setHTML(\r\n                        `<div className =\"card\">\r\n                          <label>Place</label>\r\n                          <h3 className =\"place\">${feature.name}</h3>\r\n                          <label>Address</label>\r\n                          <p className =\"address\">${feature.address}</p>\r\n                          <label>Review</label>\r\n                          <p>${feature.location_string}</p>\r\n                          <label>Ratings</label>\r\n                          <div classname =\"stars\">\r\n                            ${<StarIcon />}\r\n                            ${<StarIcon />}\r\n                            ${<StarIcon />}\r\n                            ${<StarIcon />}\r\n                            ${<StarIcon />}\r\n                          </div>\r\n                          <label>Info</label>\r\n                          <span className=\"username\">Username</span>\r\n                          <span className=\"timestamp\">Time</span>\r\n                        </div>`\r\n                      )\r\n                )\r\n                .addTo(map)\r\n        }\r\n        )\r\n\r\n        map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n        \r\n        //return () => map.remove();\r\n    }, []);\r\n    return <div className=\"map-container\" ref={mapContainerRef}>\r\n    </div>;\r\n};\r\n\r\nexport default NewMap;\r\n","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\components\\Map.js",["87","88"],"import 'mapbox-gl/dist/mapbox-gl.css';\r\nimport { useEffect, useState } from 'react';\r\nimport Map, { Marker, NavigationControl, Popup } from 'react-map-gl';\r\nrequire('dotenv').config()\r\nconsole.log(process.env)\r\n//believe dotenv gets used at build time and not runtime, so app has to be build first? \r\n\r\nconst Mapp = () => {\r\n    const [viewport, setViewport] = useState({});\r\n    useEffect(() =>{\r\n        navigator.geolocation.getCurrentPosition((pos) => {\r\n            setViewport({\r\n                ...viewport,\r\n                latitude: pos.coords.latitude,\r\n                longitude: pos.coords.longitude,\r\n                zoom: 15,\r\n                pitch: 45,\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    \r\n    return (  \r\n        <div>\r\n            {viewport.latitude && viewport.longitude && (\r\n                <div>\r\n                    <Map className=\"Original\"\r\n                        mapboxAccessToken = {\"pk.eyJ1IjoiYW5odHJyIiwiYSI6ImNsOW9kbGtwazBnbTAzd281YXJ3ejhjcmsifQ.Et0LpdRG7mN6MB58p_52qQ\"}\r\n                        initialViewState={viewport}\r\n                        style={{position: 'fixed', width: \"100%\", height: \"100%\"}}\r\n                        mapStyle=\"mapbox://styles/anhtrr/cl9odtk6b001v15s1cq54igry\"\r\n                        onRender={(event) => event.target.resize()}\r\n                    >\r\n                        <Marker\r\n                            longitude={viewport.longitude}\r\n                            latitude={viewport.latitude}\r\n                        />\r\n                        <NavigationControl\r\n                            position='top-right' />\r\n                    </Map>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Mapp;","C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\components\\SearchResults.js",["89","90","91","92"],"C:\\Users\\Derek\\Documents\\Git Repositories\\Restaurant-Reviewer\\front-end\\src\\components\\Search.js",["93","94"],"//Made with the help of https://www.telerik.com/blogs/how-to-implement-standard-search-using-react in accordance with the requirements of the CS department at NYU\r\n\r\nimport React, { useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Input } from '@chakra-ui/react'\r\n\r\nexport const SearchInput = () => {\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div>\r\n        <InputGroup>\r\n            <Input\r\n            onChange={(e) => {\r\n            setSearch(e.target.value)\r\n            }}\r\n            type=\"search\"\r\n            placeholder=\"Search restaurant\"\r\n            />\r\n            <InputRightElement>\r\n                <div>\r\n                <button onClick={() => navigate(`/search?query=${search}`)} >Search</button>\r\n                </div>\r\n            </InputRightElement>\r\n        </InputGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchInput;",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":94,"column":13,"nodeType":"101","endLine":94,"endColumn":50},{"ruleId":"102","severity":1,"message":"103","line":96,"column":41,"nodeType":"104","messageId":"105","endLine":96,"endColumn":43},{"ruleId":"106","severity":1,"message":"107","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":15,"column":11,"nodeType":"101","endLine":15,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":15,"column":14,"nodeType":"101","endLine":15,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":20,"column":11,"nodeType":"101","endLine":20,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":20,"column":14,"nodeType":"101","endLine":20,"endColumn":33},{"ruleId":"110","severity":1,"message":"111","line":25,"column":11,"nodeType":"101","endLine":25,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":25,"column":14,"nodeType":"101","endLine":25,"endColumn":35},{"ruleId":"106","severity":1,"message":"112","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":14},{"ruleId":"106","severity":1,"message":"113","line":3,"column":20,"nodeType":"108","messageId":"109","endLine":3,"endColumn":29},{"ruleId":"106","severity":1,"message":"114","line":5,"column":10,"nodeType":"108","messageId":"109","endLine":5,"endColumn":15},{"ruleId":"106","severity":1,"message":"115","line":22,"column":12,"nodeType":"108","messageId":"109","endLine":22,"endColumn":16},{"ruleId":"106","severity":1,"message":"116","line":22,"column":18,"nodeType":"108","messageId":"109","endLine":22,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":21,"column":47,"nodeType":"119","messageId":"120","endLine":21,"endColumn":49},{"ruleId":"106","severity":1,"message":"121","line":3,"column":42,"nodeType":"108","messageId":"109","endLine":3,"endColumn":47},{"ruleId":"122","severity":1,"message":"123","line":20,"column":8,"nodeType":"124","endLine":20,"endColumn":10,"suggestions":"125"},{"ruleId":"106","severity":1,"message":"112","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":14},{"ruleId":"106","severity":1,"message":"126","line":7,"column":10,"nodeType":"108","messageId":"109","endLine":7,"endColumn":15},{"ruleId":"106","severity":1,"message":"127","line":10,"column":11,"nodeType":"108","messageId":"109","endLine":10,"endColumn":15},{"ruleId":"122","severity":1,"message":"128","line":20,"column":11,"nodeType":"124","endLine":20,"endColumn":13,"suggestions":"129"},{"ruleId":"130","severity":2,"message":"131","line":14,"column":10,"nodeType":"132","messageId":"133","endLine":14,"endColumn":20},{"ruleId":"130","severity":2,"message":"134","line":22,"column":14,"nodeType":"132","messageId":"133","endLine":22,"endColumn":31},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Popup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'viewport'. Either include it or remove the dependency array. You can also do a functional update 'setViewport(v => ...)' if you only need 'viewport' in the 'setViewport' call.","ArrayExpression",["137"],"'error' is assigned a value but never used.","'slug' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["138"],"react/jsx-no-undef","'InputGroup' is not defined.","JSXIdentifier","undefined","'InputRightElement' is not defined.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [viewport]",{"range":"143","text":"144"},"Update the dependencies array to be: [query]",{"range":"145","text":"146"},[706,708],"[viewport]",[747,749],"[query]"]